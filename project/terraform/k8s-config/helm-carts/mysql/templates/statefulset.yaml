apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.mysql.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.mysql.name }}
  serviceName: {{ .Values.service.name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.mysql.name }}
    spec:
      containers:
      - name: {{ .Values.mysql.name }}
        image: "{{ .Values.mysql.image }}:{{ .Values.mysql.tag }}"
        ports:
        - containerPort: {{ .Values.mysql.port }}
        env:
        - name: MYSQL_DATABASE
          value: {{ .Values.mysql.db }}
        - name: MYSQL_USER
          value: {{ .Values.mysql.user }}
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mysql.name }}-secret
              key: user-password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mysql.name }}-secret
              key: root-password
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.mysql.storage }}
